
set hidden
set nowrap        " don't wrap lines
set tabstop=4     " a tab is four spaces
set backspace=indent,eol,start
                    " allow backspacing over everything in insert mode
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
set relativenumber "hybrid numbering pattern
set number        " always show line numbers
set shiftwidth=4  " number of spaces to use for autoindenting
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set showmatch     " set show matching parenthesis
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                    "    case-sensitive otherwise
set smarttab      " insert tabs on the start of a line according to
                    "    shiftwidth, not tabstop
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type
set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep
set nobackup
set noswapfile
set pastetoggle=<F2>
set mouse=a
set timeoutlen=500
set guifont=Meslo\ LG\ S\ Regular\ for\ Powerline:h20
"set colorscheme
set  t_Co=256
"colorscheme solarized8_dark_low
colorscheme github
filetype plugin on
"screen settings
set scrolloff=5
"setting leader key
let mapleader=","

"folding methods
set foldcolumn=2
setlocal foldmethod=indent
setlocal foldignore=
set wildmenu
nnoremap <Space> za
vnoremap <Space> za


"search queries
nnoremap / /\v
vnoremap / /\v
nnoremap ? ?\v
vnoremap ? ?\v
noremap <leader><space> :noh<cr>

" variable declarations
"leader mappings
nnoremap <leader>d dd
"// Mappings e Q for FORMATTING the current paragraph (or selection)
"Mappings for Visual mode
vmap Q gq
nmap Q gqap
"natual navigation for the LINES
nnoremap j gj
nnoremap k gk
nnoremap <c-u> viwU
"edit and source vimrc file
nnoremap <leader>ev :vsplit $MYVIMRC<cr>
nnoremap <leader>sv :source $MYVIMRC<cr>
nnoremap ; :




" Easy window navigation
map <C-h> <C-w>h
map <C-j> <C-w>j
map <C-k> <C-w>k
map <C-l> <C-w>l
" Tab Navigations
nnoremap th  :tabfirst<CR>
nnoremap tj  :tabnext<CR>
nnoremap tk  :tabprev<CR>
nnoremap tl  :tablast<CR>
nnoremap tt  :tabedit<Space>
nnoremap tn  :tabnext<Space>
nnoremap tm  :tabm<Space>
nnoremap td  :tabclose<CR>
"Clear highlighted searches
nmap <silent> ,/ :nohlsearch<CR>
"Insert mode
inoremap <c-d> <esc>ddi
inoremap kj <esc>
"inoremap <esc> <nop>
"Nop settings
noremap <left> <nop>
noremap <right> <nop>
noremap <up> <nop>
noremap <down> <nop>

"auto commands
autocmd Filetype html nnoremap <buffer><leader>c I<!--<esc>A--><esc>
augroup JavascriptCmds
	autocmd!
	autocmd Filetype javascript nnoremap <buffer><leader>c I//<esc>
	autocmd Filetype javascript setlocal tabstop=4 shiftwidth=4 softtabstop=4
augroup End
"indentation method

"vindler integration
" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'

"installing plugins
" Handlebar file support
"Plugin 'mustache/vim-mustache-handlebars'

Plugin 'Valloric/YouCompleteMe'
"Plugin 'rstacruz/sparkup'
Plugin 'rstacruz/sparkup', {'rtp': 'vim/'}    
Plugin 'tpope/vim-surround'
Plugin 'hail2u/vim-css3-syntax'
"Plugin 'groenewege/vim-less'
"Plugin 'ap/vim-css-color'
Plugin 'MarcWeber/vim-addon-mw-utils'
Plugin 'tomtom/tlib_vim'
" Buffer explorer
"Plugin 'sandeepcr529/Buffet.vim'
" Track the engine.
Plugin 'SirVer/ultisnips'
Plugin 'garbas/vim-snipmate'
" Optional:
Plugin 'honza/vim-snippets'
Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
Plugin 'Xuyuanp/nerdtree-git-plugin'
Plugin 'vim-airline/vim-airline'
Plugin 'vim-airline/vim-airline-themes'
Plugin 'majutsushi/tagbar'
Plugin 'endel/vim-github-colorscheme'
Plugin 'dfrunza/vim'
Plugin 'lifepillar/vim-solarized8'
"Plugin 'nono/vim-handlebars'

"plugin configurations
let g:airline#extensions#tabline#enabled = 1
" All of your Plugins must be added before the following line
"Trigger snipmate
 imap <C-J> <Plug>snipMateNextOrTrigger
 smap <C-J> <Plug>snipMateNextOrTrigger
 " Trigger configuration. Do not use <tab> if you use https://github.com/Valloric/YouCompleteMe.
let g:UltiSnipsExpandTrigger="<tab>"
let g:UltiSnipsJumpForwardTrigger="<c-b>"
let g:UltiSnipsJumpBackwardTrigger="<c-z>"

" If you want :UltiSnipsEdit to split your window.
let g:UltiSnipsEditSplit="vertical"
 "set handlebar options
 "let g:mustache_abbreviations = 1
"au BufRead,BufNewFile *.handlebars,*.hbs set ft=html syntax=mustache
au BufRead,BufNewFile *.handlebars,*.hbs set ft=html syntax=handlebars

nnoremap <c-d> :NERDTreeToggle<cr>
let g:NERDTreeDirArrows = 1
let g:NERDTreeDirArrowExpandable = '▸'
let g:NERDTreeDirArrowCollapsible = '▾'
let g:airline_powerline_fonts = 1
let g:cssColorVimDoNotMessMyUpdatetime = 1
"autocmd vimenter * NERDTree
nmap <F8> :TagbarToggle<CR>
call vundle#end()  
